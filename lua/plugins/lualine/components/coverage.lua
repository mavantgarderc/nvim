-- local cache = require("lualine.utils.cache")
-- local misc = require("lualine.utils.misc")
--
-- local M = {}
--
-- local parse_lcov = function(s)
--   local total, hit = 0, 0
--   for line in s:gmatch("[^\r\n]+") do
--     local lf = line:match("^LF:(%d+)"); if lf then total = total + tonumber(lf) end
--     local lh = line:match("^LH:(%d+)"); if lh then hit = hit + tonumber(lh) end
--   end
--   if total == 0 then return nil end
--   return math.floor((hit / total) * 100 + 0.5)
-- end
--
-- local parse_xml  = function(s)
--   local rate = s:match('line%-rate="([%d%.]+)"')
--   if rate then return math.floor(tonumber(rate) * 100 + 0.5) end
--   local valid, covered = s:match('lines%-valid="(%d+)".-lines%-covered="(%d+)"')
--   if valid and covered and tonumber(valid) > 0 then
--     return math.floor((tonumber(covered) / tonumber(valid)) * 100 + 0.5)
--   end
--   return nil
-- end
--
-- local coverage   = function()
--   return cache.get("coverage", function()
--     local paths = { "coverage/lcov.info", "lcov.info", "coverage/coverage.xml", "coverage.xml" }
--     for _, p in ipairs(paths) do
--       local s = misc.read_file_safe(p, 2 * 1024 * 1024)
--       if s then
--         local pct = p:match("lcov%.info") and parse_lcov(s) or parse_xml(s)
--         if pct and pct >= 0 then return "ï’’ " .. pct .. "%%" end
--       end
--     end
--     return ""
--   end, 30000)
-- end
--
-- return M
