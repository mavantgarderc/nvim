# Weathered Bark - An earthy, organic colorscheme
# Deep browns with muted greens and soft yellows
# Inspired by aged tree bark and forest floors

[metadata]
name = "weathered_bark"
display_name = "Weathered Bark"
author = "custom"
version = "1.0.0"
description = "Earthy colorscheme with deep browns, muted greens, and soft yellows"
background = "dark"

[colors]
# Base colors - Core backgrounds and foregrounds
bg = "#1A1612"
bg_alt = "#14110E"
bg_highlight = "#24201B"
bg_dim = "#14110E"
bg_light = "#24201B"
fg = "#E0D5C7"
fg_alt = "#CDBFA8"
fg_dim = "#CDBFA8"
fg_dark = "#B5A488"

# Bark colors (brown variations)
bark_deep = "#2B1F15"
bark_dark = "#3D2E20"
bark_medium = "#4F3F2E"
bark_light = "#6B5545"
bark_aged = "#8B6F5B"

# Wood colors (rich browns)
wood_ebony = "#1C1208"
wood_walnut = "#2E1F12"
wood_oak = "#4A3426"
wood_maple = "#66493A"
wood_pine = "#7A5E4F"

# Moss colors (muted greens)
moss_deep = "#2A3326"
moss_dark = "#3C4738"
moss_medium = "#4F5C4A"
moss_light = "#62705C"
moss_sage = "#7A8A6F"

# Lichen colors (pale greens)
lichen_gray = "#6B7566"
lichen_green = "#7A8570"
lichen_pale = "#94A387"

# Earth colors (soil tones)
earth_dark = "#2B1A0F"
earth_rich = "#3D2A1F"
earth_loam = "#5C4A35"
earth_clay = "#75634A"

# Leaf colors (muted yellows and greens)
leaf_yellow = "#B8A052"
leaf_amber = "#D4B366"
leaf_gold = "#E6C57A"
leaf_green = "#8A9B6F"

# Stone colors (grays)
stone_dark = "#4A4A42"
stone_medium = "#5C5C54"
stone_light = "#7A7A6E"

# Paper-inspired neutral tones
black = "#0A0805"
dark_gray = "#2B2A24"
gray = "#5A5850"
light_gray = "#7B7A6E"
white = "#E0D5C7"

# Semantic color mappings
blue = "#6B8A8A"
cyan = "#7A9999"
green = "#8A9B6F"
yellow = "#D4B366"
orange = "#B8A052"
red = "#A67366"
purple = "#9B8A94"
magenta = "#A89BAA"

# UI colors
border = "#5A5850"
selection = "#3D2E20"
comment = "#7B7A6E"
line_number = "#5A5850"
cursor_line = "#2B2A24"
cursor_column = "#2B2A24"
visual = "#3D2E20"
visual_nc = "#3C4738"
search = "#A67366"
inc_search = "#B8847A"
match_paren = "#D4B366"
cursor_line_nr = "#CDBFA8"
folded = "#5A5850"
fold_column = "#5A5850"

# Completion menu
pmenu = "#24201B"
pmenu_sel = "#3D2E20"
pmenu_sb = "#14110E"
pmenu_thumb = "#5A5850"

# Statusline
status_line = "#24201B"
status_line_nc = "#14110E"

# Tabline
tab_line = "#14110E"
tab_line_fill = "#0A0805"
tab_line_sel = "#24201B"

# Vertical split
vert_split = "#5A5850"

# Diff colors
diff_add = "#8A9B6F"
diff_delete = "#A67366"
diff_change = "#D4B366"
diff_text = "#E6C57A"

# Git colors
git_add = "#8A9B6F"
git_change = "#D4B366"
git_delete = "#B8847A"

# Diagnostic colors
error = "#B8847A"
warning = "#B8A052"
info = "#7A9999"
hint = "#A89BAA"

# Terminal colors (ANSI)
terminal_black = "#0A0805"
terminal_red = "#A67366"
terminal_green = "#8A9B6F"
terminal_yellow = "#D4B366"
terminal_blue = "#6B8A8A"
terminal_magenta = "#9B8A94"
terminal_cyan = "#7A9999"
terminal_white = "#E0D5C7"
terminal_bright_black = "#5A5850"
terminal_bright_red = "#B8847A"
terminal_bright_green = "#9BAC80"
terminal_bright_yellow = "#E6C57A"
terminal_bright_blue = "#7A9999"
terminal_bright_magenta = "#A89BAA"
terminal_bright_cyan = "#7A9999"
terminal_bright_white = "#CDBFA8"

[highlights]
# Editor highlights
Normal = { fg = "fg", bg = "bg" }
NormalFloat = { fg = "fg", bg = "bg_alt" }
CursorLine = { bg = "cursor_line" }
CursorColumn = { bg = "cursor_column" }
ColorColumn = { bg = "bg_highlight" }
LineNr = { fg = "line_number" }
CursorLineNr = { fg = "cursor_line_nr", bold = true }
SignColumn = { bg = "bg" }
Folded = { fg = "folded", bg = "bg_highlight" }
FoldColumn = { fg = "fold_column", bg = "bg" }
Visual = { bg = "visual" }
VisualNOS = { bg = "visual_nc" }
Search = { fg = "bg", bg = "search" }
IncSearch = { fg = "bg", bg = "inc_search" }
VertSplit = { fg = "vert_split" }
WinSeparator = { fg = "border" }
StatusLine = { fg = "fg", bg = "status_line" }
StatusLineNC = { fg = "fg_alt", bg = "status_line_nc" }
Pmenu = { fg = "fg", bg = "pmenu" }
PmenuSel = { fg = "bg", bg = "pmenu_sel" }
PmenuSbar = { bg = "pmenu_sb" }
PmenuThumb = { bg = "pmenu_thumb" }
TabLine = { fg = "fg_alt", bg = "tab_line" }
TabLineFill = { bg = "tab_line_fill" }
TabLineSel = { fg = "fg", bg = "tab_line_sel" }

# Syntax highlights - Traditional vim groups
Comment = { fg = "comment", italic = true }
Constant = { fg = "leaf_amber" }
String = { fg = "moss_sage" }
Character = { fg = "leaf_gold" }
Number = { fg = "leaf_yellow" }
Boolean = { fg = "leaf_amber" }
Float = { fg = "leaf_yellow" }
Identifier = { fg = "fg" }
Function = { fg = "bark_aged" }
Statement = { fg = "purple" }
Conditional = { fg = "wood_maple" }
Repeat = { fg = "purple" }
Label = { fg = "wood_maple" }
Operator = { fg = "fg" }
Keyword = { fg = "purple" }
Exception = { fg = "error" }
PreProc = { fg = "purple" }
Include = { fg = "purple" }
Define = { fg = "purple" }
Macro = { fg = "purple" }
PreCondit = { fg = "purple" }
Type = { fg = "bark_aged" }
StorageClass = { fg = "bark_aged" }
Structure = { fg = "bark_aged" }
Typedef = { fg = "bark_aged" }
Special = { fg = "leaf_amber" }
SpecialChar = { fg = "leaf_gold" }
Tag = { fg = "wood_maple" }
Delimiter = { fg = "magenta" }
SpecialComment = { fg = "red" }
Debug = { fg = "error" }
Underlined = { fg = "blue", underline = true }
Ignore = { fg = "comment" }
Error = { fg = "error", bold = true }
Todo = { fg = "yellow", bg = "bg_highlight", bold = true }

# Modern Tree-sitter highlights (TS* groups)
TSVariable = { fg = "fg" }
TSVariableBuiltin = { fg = "leaf_amber" }
TSParameter = { fg = "fg_alt" }
TSField = { fg = "bark_aged" }
TSProperty = { fg = "bark_aged" }
TSConstant = { fg = "leaf_amber" }
TSConstBuiltin = { fg = "leaf_gold" }
TSConstMacro = { fg = "leaf_amber" }
TSNamespace = { fg = "bark_aged" }
TSString = { fg = "moss_sage" }
TSStringEscape = { fg = "leaf_gold" }
TSStringSpecial = { fg = "leaf_gold" }
TSCharacter = { fg = "leaf_gold" }
TSCharacterSpecial = { fg = "leaf_gold" }
TSNumber = { fg = "leaf_yellow" }
TSBoolean = { fg = "leaf_amber" }
TSFloat = { fg = "leaf_yellow" }
TSFunction = { fg = "bark_aged" }
TSFuncBuiltin = { fg = "cyan" }
TSFuncCall = { fg = "bark_aged" }
TSFuncMacro = { fg = "leaf_amber" }
TSMethod = { fg = "bark_aged" }
TSMethodCall = { fg = "bark_aged" }
TSConstructor = { fg = "bark_aged" }
TSOperator = { fg = "fg" }
TSKeyword = { fg = "purple" }
TSKeywordFunction = { fg = "purple" }
TSKeywordOperator = { fg = "purple" }
TSKeywordReturn = { fg = "purple" }
TSConditional = { fg = "wood_maple" }
TSRepeat = { fg = "purple" }
TSException = { fg = "error" }
TSType = { fg = "bark_aged" }
TSTypeBuiltin = { fg = "bark_aged" }
TSTypeDefinition = { fg = "bark_aged" }
TSAttribute = { fg = "leaf_amber" }
TSLabel = { fg = "wood_maple" }
TSComment = { fg = "comment", italic = true }
TSPunctDelimiter = { fg = "fg" }
TSPunctBracket = { fg = "fg" }
TSPunctSpecial = { fg = "leaf_gold" }
TSTag = { fg = "wood_maple" }
TSTagAttribute = { fg = "leaf_amber" }
TSTagDelimiter = { fg = "fg" }

# LSP highlights
LspReferenceText = { bg = "bg_highlight" }
LspReferenceRead = { bg = "bg_highlight" }
LspReferenceWrite = { bg = "bg_highlight" }
LspSignatureActiveParameter = { fg = "yellow", bold = true }

# Diagnostic highlights
DiagnosticError = { fg = "error" }
DiagnosticWarn = { fg = "warning" }
DiagnosticInfo = { fg = "info" }
DiagnosticHint = { fg = "hint" }
DiagnosticUnderlineError = { undercurl = true, sp = "error" }
DiagnosticUnderlineWarn = { undercurl = true, sp = "warning" }
DiagnosticUnderlineInfo = { undercurl = true, sp = "info" }
DiagnosticUnderlineHint = { undercurl = true, sp = "hint" }
DiagnosticVirtualTextError = { fg = "error", bg = "bg_highlight" }
DiagnosticVirtualTextWarn = { fg = "warning", bg = "bg_highlight" }
DiagnosticVirtualTextInfo = { fg = "info", bg = "bg_highlight" }
DiagnosticVirtualTextHint = { fg = "hint", bg = "bg_highlight" }

# Git highlights
DiffAdd = { fg = "diff_add", bg = "bg" }
DiffChange = { fg = "diff_change", bg = "bg" }
DiffDelete = { fg = "diff_delete", bg = "bg" }
DiffText = { fg = "diff_text", bg = "bg_highlight" }
GitSignsAdd = { fg = "git_add" }
GitSignsChange = { fg = "git_change" }
GitSignsDelete = { fg = "git_delete" }
GitSignsCurrentLineBlame = { fg = "comment", italic = true }
